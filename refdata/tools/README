
############################
##       Use cases        ##
############################

##
# 1.1. Update from Geonames
# -------------------------
#
# The Geonames (database/Web) service has been updated, i.e., new Geonames
# data files have been downloaded and the geo_geonames database has been
# refreshed/updated.
#

./update_airports_csv_after_getting_geonames_iata_dump.sh \
  dump_from_geonames.csv ../ORI/best_coordinates_known_so_far.csv \
  ../ORI/ref_airport_pageranked.csv 0

# The new suggested file of ORI-maintained airport is 'new_airports.csv'.
# However, as of now (March 2012), its format (Geonames-based) does not
# correspond to the ORI-maintained data file format (ORI-enriched).
# Both files can be compared, though:
# diff -c new_airports.csv ../ORI/ori_por_public.csv

# But, more importantly, a data file, summing up all the differences,
# is generated, namely 'por_main_diff.csv'. Those differences correspond to
# the geographical distance weighted by the airport popularity (expressed as
# a number of passengers per year).
less por_main_diff.csv

# To see the respective details of a given airport, just type something like:
grep "^LHR" dump_from_*.csv ../ORI/best_coordinates_known_so_far.csv

# Then, compare
# a. in Geonames:
midori http://www.geonames.org/maps/google.html
# b. in Google Maps:
midori http://maps.google.com
# c. in Wikipedia:
midori http://en.wikipedia.org
# d. in Bing Maps:
midori http://maps.bing.com


##
# 1.2. Geonames has better coordinates for a known POR
# ----------------------------------------------------
#
# When the geographical details of a given POR are proved better in Geonames
# than in the ORI-maintained data files, those latters have to be corrected.
# Just update the coordinates within the ORI-maintained list of best known
# coordinates:
vi ../ORI/best_coordinates_known_so_far.csv
git add ../ORI/best_coordinates_known_so_far.csv

# For the bulk update, see also 7.

# Proceed with the use case 2.1, since the ORI-maintained list of best known
# coordinates has now better coordinates than the ORI-maintained list of POR.


##
# 1.3. Geonames has details for an unknown POR
# --------------------------------------------
#
# A new POR, still unknown from ORI, may have been specified within Geonames.
#
# 1.3.1. Follow the instructions given by the
#  ./update_airports_csv_after_getting_geonames_iata_dump.sh script. That is:
cat ../ORI/best_coordinates_known_so_far.csv ./best_coordinates_known_so_far.csv.missing | sort -t'^' -k1,1 > ./best_coordinates_known_so_far.csv.tmp

# Check that everything if fine:
diff -c ./best_coordinates_known_so_far.csv.tmp ../ORI/best_coordinates_known_so_far.csv

# Then:
\mv -f ./best_coordinates_known_so_far.csv.tmp ../ORI/best_coordinates_known_so_far.csv
\rm -f best_coordinates_known_so_far.csv.missing
git add ../ORI/best_coordinates_known_so_far.csv

# 1.3.2. Re-generate the ORI-maintained POR data file
# To ease the process, the following can be performed from another terminal,
# from the same directory (remember, we are in ../tools):
cd ../ORI
./make_ori_por_public.sh

# Check that everything is fine:
git diff ori_por_public.csv

# Then:
git add ori_por_public.csv

# Re-do (go back to) 1.1.
cd -


##
# 2.1. ORI-maintained best known coordinates file has better coordinates
# ----------------------------------------------------------------------
#
# The ORI-maintained list of POR needs to be updated
\cp -f ../ORI/ori_por_public.csv ori_airports.csv    # The file to be updated
./update_airports_csv_from_best_known_coordinates.sh

# Check that everything is fine:
diff -c ori_airports.csv ori_new_airports.csv

# Then:
\cp -f ori_new_airports.csv ../ORI/ori_por_public.csv
git add ../ORI/ori_por_public.csv


##
# 3.1. ORI-maintained list has a new POR unknown from the best coordinates
# ------------------------------------------------------------------------
#
# The file of best known coordinates has to be updated:
\cp -f ../ORI/ori_por_public.csv ori_airports.csv
./update_best_known_coordinates_from_airports_csv.sh

# Check that everything is fine:
diff -c ../ORI/best_coordinates_known_so_far.csv best_new_coordinates_known_so_far.csv

# Then:
\cp -f best_new_coordinates_known_so_far.csv ../ORI/best_coordinates_known_so_far.csv
git add ../ORI/best_coordinates_known_so_far.csv

# Re-do (go back to) 1.1.


##
# 4.1. ORI-maintained list has a new POR unknown from Geonames
# ------------------------------------------------------------
#
# Add the POR in Geonames:
midori http://www.geonames.org/maps/google.html
# Check with:
# a. in Google Maps:
midori http://maps.google.com
# b. in Wikipedia:
midori http://en.wikipedia.org
# c. in Bing Maps:
midori http://maps.bing.com


##
# 5.1. Generation of the OpenTrep-related POR data files
# ------------------------------------------------------
#
../trep/make_trep_por.sh
# In a terminal with OpenTrep:
cd ${TREP_DIR}
\cp -f /tmp/por/trep_place_details.csv /tmp/por/trep_place_names.csv db/data
git add db/data/trep_place_details.csv db/data/trep_place_names.csv

# As a reminder, the following then allows to run OpenTrep
# rm -rf build && mkdir build
cd build
export INSTALL_BASEDIR=~/dev/deliveries
export LIBSUFFIX_4_CMAKE="-DLIB_SUFFIX=64"
cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_BASEDIR}/opentrep-99.99.99 -DCMAKE_BUILD_TYPE:STRING=Debug -DINSTALL_DOC:BOOL=OFF ${LIBSUFFIX_4_CMAKE} ..
make && make install
# ${INSTALL_BASEDIR}/opentrep-99.99.99/create_trep_tables.sh
${INSTALL_BASEDIR}/opentrep-99.99.99/load_trep_data.sh
mkdir -p /tmp/opentrep/traveldb
./opentrep/opentrep-indexer
./opentrep/opentrep-indexer -q cdg sfo


##
# 6. Generation of the list of POR, specified in IATA,
#    but missing from Geonames
# -----------------------------------------------------------------------
#
# 6.1. Do like in 1.1:
./update_airports_csv_after_getting_geonames_iata_dump.sh

# 6.2. Then, generate the por_in_iata_but_missing_from_geonames.csv and
#      pageranked_por_in_iata_but_missing_from_geonames.csv files:
./generate_por_lists_for_geonames.sh

# If any POR is not in RFD, it will appear and the program will exit (no file
# will be generated); follow the suggestion to remove those entries from
# the dump_from_geonames.csv.missing file.

# 6.3. Send the por_in_iata_but_missing_from_geonames.csv file to Geonames
gzip por_in_iata_but_missing_from_geonames.csv
gzip pageranked_por_in_iata_but_missing_from_geonames.csv

##
# 7. Bulk fix the best known coordinates, when those are equal to zero
#    and they are known by Geonames and/or by RFD.
#
#    That is the bulk version of 1.2.
#
./fix_best_known_coordinates.sh

# When Geonames has better coordinates
wc -l new_best_coordinates_known_so_far.csv.wgeo ../ORI/best_coordinates_known_so_far.csv
diff -c new_best_coordinates_known_so_far.csv.wgeo ../ORI/best_coordinates_known_so_far.csv | less

# When RFD has better coordinates
wc -l new_best_coordinates_known_so_far.csv.wrfd ../ORI/best_coordinates_known_so_far.csv
diff -c new_best_coordinates_known_so_far.csv.wrfd ../ORI/best_coordinates_known_so_far.csv | less

# In case everything seems correct, replace the ORI-maintained file:
#  - When Geonames has better coordinates
\mv -f new_best_coordinates_known_so_far.csv.wgeo ../ORI/best_coordinates_known_so_far.csv
#  - When RFD has better coordinates
\mv -f new_best_coordinates_known_so_far.csv.wrfd ../ORI/best_coordinates_known_so_far.csv

# Add it into Git and re-check
git add ../ORI/best_coordinates_known_so_far.csv
git diff --cached ../ORI/best_coordinates_known_so_far.csv

# Go to 2.1., as the ORI-maintained file of best known coordinates
# has been updated

